@{
	ViewData["isDashboard"] = true;
}
@model ExpenseTracker.Models.User

@* Summary Widgets*@
<div class="row mb-4">
        <div class="col-md-4">
            <div class="d-flex flex-row widget summary income-widget">
                <div class="d-flex flex-column justify-content-center p-5 icon-wrapper">
                    <i class="fa-solid fa-arrow-trend-up fa-2xl"></i>
                </div>
                <div class="d-flex flex-column m-auto py-3 text-wrapper">
                    <span class="lead">Your Total Income</span>
                    <h1 class="display-6 fw-bold">@ViewBag.Income</h1>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="d-flex flex-row widget summary expense-widget">
                <div class="d-flex flex-column justify-content-center p-5 icon-wrapper">
                    <i class="fa-solid fa-arrow-trend-down fa-2xl"></i>
                </div>
                <div class="d-flex flex-column m-auto py-3 text-wrapper">
                <span class="lead">Your Total Expenses</span>
                    <h1 class="display-6 fw-bold">@ViewBag.Expense</h1>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="d-flex flex-row widget summary balance-widget">
                <div class="d-flex flex-column justify-content-center p-5 icon-wrapper">
                    <i class="fa-solid fa-sack-dollar fa-2xl"></i>
                </div>
                <div class="d-flex flex-column m-auto py-3 text-wrapper">
                <span class="lead"> Your Total Balance</span>
                    <h1 class="display-6 fw-bold">@ViewBag.Balance</h1>
                </div>
            </div>
        </div>
</div>

@*Widget Charts*@
<div class="row mb-4">
    <div class="col-md-4">
        <div class="widget chart  expense-widget-chart w-100">
            <div class="title p-4">
                <h5 class="fw-bold text-center">My Expenses</h5>
            </div>
                @(
                    Html.EJS().AccumulationChart("ExpenseChar")
                        .EnableSmartLabels(true)
                        .Tooltip(tooltip =>
                        {
                            tooltip.Enable(true);
                            tooltip.Format("${point.x}: ${point.y}");
                        })
                        .DataSource((IEnumerable<object>)ViewBag.CharData)
                        .Series(series =>
                        {
                            series.DataLabel(dl => dl.Visible(true)
                            .Position(Syncfusion.EJ2.Charts.AccumulationLabelPosition.Inside)
                            .Font(ft => ft.FontWeight("600").Color("black"))
                            .Name("formattedAmount"))
                            .XName("categoryTitleWithIcon")
                            .YName("amount")
                            .InnerRadius("55%")
                            .Name("Expense").Border(br => br.Width(1))
                            .LegendShape(Syncfusion.EJ2.Charts.LegendShape.Circle)
                            .ExplodeIndex(0).DataSource(ViewBag.CharData).Add();
                        })
                        .LegendSettings(legend =>
                        {
                            legend.Visible(true);
                            legend.Position(Syncfusion.EJ2.Charts.LegendPosition.Bottom); 
                            legend.Width("100%");
                            legend.TextStyle(style => { style.FontWeight("600").Color("#000"); });
                            legend.Padding(10);
                    })
                    .Render()
                    )
            
            </div>
        </div>
    <div class="col-md-8">
        <div class="widget balance-widget-chart">
            <div class="title p-4">
                        <h5 class="fw-bold text-center">Income VS Expense</h5>
                    </div>
                @Html.EJS().Chart("container").Palettes(new string[] { "#28a745", "#dc3545" }).PrimaryXAxis(px => px
                         .ValueType(Syncfusion.EJ2.Charts.ValueType.Category)
                         .LabelStyle(ls => ls.Color("#000"))
                         .MajorGridLines(mg => mg.Width(0))
                         .MajorTickLines(mt => mt.Width(0))
                         ).PrimaryYAxis(py => py
                         .LabelStyle(ls => ls.Color("#000"))
                         .MajorGridLines(mg => mg.Width(1).Color("#32414d").DashArray("3,5"))
                         .MajorTickLines(mt => mt.Width(0))
                         .LineStyle(ls => ls.Width(0))
                         ).ChartArea(ca => ca
                         .Border(b => b.Width(0))
                         ).Series(series =>
                         {
                             series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Spline)
                             .XName("day")
                             .YName("income")
                             .DataSource(ViewBag.ChartData)
                             .Name("Income")
                             .Width(3)
                             .Add();
                             series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Spline)
                             .XName("day")
                             .YName("expense")
                             .DataSource(ViewBag.ChartData)
                             .Name("Expense")
                             .Width(3)
                             .Add();
                         }).PrimaryYAxis(axis => axis.Minimum(-1000)).LegendSettings(legend =>
                         {
                             legend.Position(Syncfusion.EJ2.Charts.LegendPosition.Bottom)
                             .EnableHighlight(true)
                             .Padding(10)
                             .ToggleVisibility(false)
                             .TextStyle(ts => ts.Color("#000").Size("1rem"));
                         }).Tooltip(tt => tt.Enable(true).Format("${point.x}: ${point.y}")).Render()
           </div>
      </div>
 </div>

@*Recent transactions and Users*@
<div class="row">
    <div class="col-md-6">
        <div class="widget" style="height: 410px !important;">
            <div class="title p-4">
                <h5 class="fw-bold text-center">Recently Added Transactions</h5>
                <hr/>
            </div>
            <div class="px-4 pb-4">
                   @Html.EJS().Grid("Transcations").DataSource((IEnumerable<object>)ViewBag.RecentTransactions).Columns(col =>
                         {
                             col.Field("CategoryTitleWithIcon").HeaderText("Category").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Left).Add();
                             col.Field("Date").HeaderText("Date").Width("140").Type("date").Format("dd-MMM-yy").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                             col.Field("FormattedAmount").HeaderText("Amount").Width("130").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                         }).GridLines(Syncfusion.EJ2.Grids.GridLine.None).Render()      
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="widget" style="height: 410px !important;">
            <div class="title p-4">
                <h5 class="fw-bold text-center">New users</h5>
                <hr />
            </div>
            <div class="px-4 pb-4">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Nickname</th>
                            <th>Profile Image</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in ViewBag.RecentUsers)
                        {
                            <tr>
                                <td>@user.Nickname</td>
                                <td>
                                    @if (!string.IsNullOrEmpty(user.DisplayImage))
                                    {
                                        <img src="@user.DisplayImage" alt="Profile Image" />
                                    }
                                    else
                                    {
                                        <img src="~/userImage.png" alt="Default Profile Image"  />
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
